package com.onlinebookshop.shop.aspect;

import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.springframework.stereotype.Component;

@Aspect
@Component
public class LoggingAspect {
//service package -> services
	//before the methods get called
	//print (Logging ->
	//execution point
	//(* -> tells any return type
	//service* -> any class inside the service package
	//.*(--))-> 
	@Before("execution(* com.onlinebookshop.shop.service.*.*(..))")
	public void beforeServiceMethod() {
		System.out.println("-------Logging From Aspect : Method called in Service Layer-------");
	}
	@Around("execution(*com.onlineshop.shop.service.*.*(..))")
	public void aroundServiceMethod(ProceedingJointPoint joinPoint) throws Throwable{
		long startTime = System.currentTimeMillis();
		joinPoint.proceed();
		long endTime = System.currentTimeMillis();
		joinPoint.proceed();
		long endTime =System.currentTimeMillis();
		System.out.println("-----Logging : Method execution Time" + joinPoint.getSignature()).getName()
		+ "executed in :" +(endTime - startTime));
		
		
	}
}
