<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Books</title>
</head>
<body>
    <h1>Books available</h1>
    <ul id="bookList"></ul>

    <label for="bookId">Enter book ID:</label>
    <input type="number" id="bookId" name="bookId">
    <button id="searchButton">Search</button>

    <h2>Book details</h2>
    <p id="bookDetails"></p>

    <form id="bookForm">
        <label for="title">Title:</label>
        <input type="text" id="title" name="title"><br><br>
        <label for="price">Price:</label>
        <input type="text" id="price" name="price"><br><br>
        <label for="authorId">Author ID:</label>
        <input type="text" id="authorId" name="authorId"><br><br>
        <button type="button" onclick="addBook()">Add Book</button>
    </form>

    <label for="deleteBookId">Enter book ID to delete:</label>
    <input type="number" id="deleteBookId" name="deleteBookId">
    <button id="deleteButton">Delete</button>

    <script src="bookController.js"></script>
    <script>
        // Fetch all books and display them in a list
        fetch('/api/books')
            .then(response => response.json())
            .then(data => {
                const list = document.getElementById('bookList');
                data.forEach(book => {
                    const li = document.createElement('li');
                    li.textContent = `${book.title} having price $${book.price} with author ID ${book.authorId}`;
                    list.appendChild(li);
                });
            })
            .catch(error => console.error('Error fetching books data:', error));

        // Function to fetch book by ID and display its details
        function fetchBookById() {
            const bookId = document.getElementById("bookId").value;
            if (!bookId) {
                alert("Please enter a book ID");
                return;
            }
            fetch(`/api/books/${bookId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Book not found");
                    }
                    return response.json();
                })
                .then(book => {
                    document.getElementById("bookDetails").textContent =
                        `Title: ${book.title} || Price: $${book.price} || Author ID: ${book.authorId}`;
                })
                .catch(error => {
                    document.getElementById("bookDetails").textContent = "Book not found";
                });
        }

        // Adding event listener to the search button
        document.getElementById("searchButton").addEventListener("click", fetchBookById);

        // Function to add a new book
        function addBook() {
            const title = document.getElementById('title').value;
            const price = document.getElementById('price').value;
            const authorId = document.getElementById('authorId').value;

            if (!title || !price || !authorId) {
                alert('Please fill in all fields');
                return;
            }

            const newBook = {
                title: title,
                price: price,
                authorId: authorId
            };

            fetch('/api/books', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(newBook)
            })
            .then(response => {
                if (response.ok) {
                    alert('Book added successfully!');
                    // Optionally, refresh the book list by re-fetching the books
                    fetchBooks();  // Assuming fetchBooks is defined to refresh the list
                } else {
                    throw new Error('Failed to add book');
                }
            })
            .catch(error => {
                console.error('Error adding book:', error);
            });
        }

        // Function to delete a book by ID
        function deleteBook() {
            const bookId = document.getElementById('deleteBookId').value;
            if (!bookId) {
                alert('Please enter a book ID');
                return;
            }
            fetch(`/api/books/${bookId}`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    alert('Book deleted successfully!');
                    // Optionally, refresh the book list by re-fetching the books
                    fetchBooks();  // Assuming fetchBooks is defined to refresh the list
                } else {
                    throw new Error('Failed to delete book');
                }
            })
            .catch(error => {
                console.error('Error deleting book:', error);
            });
        }

        // Add event listener to the delete button
        document.getElementById("deleteButton").addEventListener("click", deleteBook);
    </script>
</body>
</html>